set nocompatible


"
" Plugins
"
call plug#begin()
Plug 'editorconfig/editorconfig-vim'
Plug 'scrooloose/nerdtree'
Plug 'vim-syntastic/syntastic'
Plug 'Valloric/YouCompleteMe', { 'do': 'python install.py {{#go}}--gocode-completer{{/go}} {{#js}}--tern-completer{{/js}} {{#rust}}--racer-completer{{/rust}} {{#dotnet}}--omnisharp-completer{{/dotnet}}' }
Plug 'SirVer/ultisnips'
Plug 'tpope/vim-dispatch'

{{#go}}
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
{{/go}}

{{#js}}
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
{{/js}}

{{#rust}}
Plug 'rust-lang/rust.vim'
Plug 'cespare/vim-toml'
{{/rust}}

{{#dotnet}}
if has('win32')
  Plug 'OmniSharp/omnisharp-vim', { 'do': 'msbuild ./server/OmniSharp.sln' }
else
  Plug 'OmniSharp/omnisharp-vim', { 'do': 'xbuild ./server/OmniSharp.sln' }
endif
{{/dotnet}}
call plug#end()


"
" Base
"
set number
set tabstop=4
set completeopt-=preview
set backspace=indent,eol,start


"
" NERDTree
"
let g:NERDTreeQuitOnOpen = 1
let g:NERDTreeShowHidden = 1
let g:NERDTreeIgnore = ['\~$', '\.swp$']
map <C-n> :NERDTreeToggle<CR>


"
" syntastic
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 1
let g:syntastic_enable_highlighting = 1
let g:syntastic_enable_signs = 1


"
" UltiSnips
"
let g:UltiSnipsExpandTrigger = '<c-j>'
let g:UltiSnipsJumpForwardTrigger = '<c-b>'
let g:UltiSnipsJumpBackwardTrigger = '<c-z>'


{{#go}}
"
" Go
"
let g:go_fmt_command = "goimports"
let g:go_fmt_fail_silently = 1
let g:syntastic_go_checkers = ['gometalinter']
let g:syntastic_go_gometalinter_args = '--disable=gotype --fast'
{{/go}}


{{#js}}
"
" JavaScript
"
let g:jsx_ext_required = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'
{{/js}}


{{#java}}
"
" Java
"
let g:EclimCompletionMethod = 'omnifunc'
{{/java}}


{{#rust}}
"
" Rust
"
let g:syntastic_rust_checkers = ['rustc']
{{/rust}}


{{#dotnet}}
let g:syntastic_cs_checkers = ['syntax', 'semantic', 'issues']
{{/dotnet}}

